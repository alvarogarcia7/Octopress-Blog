<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Encryption | Parsiya's Den]]></title>
  <link href="http://parsiya.net/blog/categories/encryption/atom.xml" rel="self"/>
  <link href="http://parsiya.net/"/>
  <updated>2014-10-07T02:42:33-04:00</updated>
  <id>http://parsiya.net/</id>
  <author>
    <name><![CDATA[Parsiya]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Apple's Common Crypto Library Defaults to a Zero IV if One Is Not Provided]]></title>
    <link href="http://parsiya.net/blog/2014-07-03-apples-common-crypto-library-defaults-to-a-zero-iv-if-one-is-not-provided/"/>
    <updated>2014-07-03T01:30:18-04:00</updated>
    <id>http://parsiya.net/blog/apples-common-crypto-library-defaults-to-a-zero-iv-if-one-is-not-provided</id>
    <content type="html"><![CDATA[<p>Today I was writing some guidelines about generating keys for mobile applications at work. While providing code examples in Java and Obj-C for AES encryption I happened to look at Apple’s <a href="http://opensource.apple.com/source/CommonCrypto/CommonCrypto-60049/lib/">Common Crypto</a> library . While going through the source code for <a href="http://opensource.apple.com/source/CommonCrypto/CommonCrypto-60049/lib/CommonCryptor.c">CommonCryptor.c</a>, I noticed that IV is commented as <code>/* optional initialization vector */</code>. This makes sense because not all ciphers use IV and not all AES modes of operation (e.g. ECB mode). However; if an IV is not provided, the library will default to a zero IV.</p>

<p>You can see the code here inside the function <code>ccInitCryptor</code> (search for defaultIV) <a href="http://opensource.apple.com/source/CommonCrypto/CommonCrypto-60049/lib/CommonCryptor.c">source</a>. <code>CC_XZEROMEM</code> resets all bytes of IV to zero (that is 0x00):</p>

<p>``` c
static inline CCCryptorStatus ccInitCryptor
(CCCryptor *ref, const void *key, unsigned long key_len, const void *tweak_key, const void *iv) {</p>

<pre><code>size_t blocksize = ccGetCipherBlockSize(ref);
uint8_t defaultIV[blocksize];


if(iv == NULL) {
    CC_XZEROMEM(defaultIV, blocksize);
    iv = defaultIV;
}

...

return kCCSuccess; }
</code></pre>

<p>```</p>

<p>While I am told this is probably common behavior in crypto libraries, I think it’s dangerous. I ended up putting a comment in code examples warning developers about this behavior. So, heads up ;)</p>

]]></content>
  </entry>
  
</feed>
